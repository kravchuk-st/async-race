{"version":3,"file":"main.js","mappings":"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","sources":["webpack://my-webpack-project/webpack/bootstrap","webpack://my-webpack-project/webpack/runtime/global","webpack://my-webpack-project/webpack/runtime/publicPath","webpack://my-webpack-project/./src/store.ts","webpack://my-webpack-project/./src/api.ts","webpack://my-webpack-project/./img/car.svg","webpack://my-webpack-project/./img/finish.svg","webpack://my-webpack-project/./src/draw.ts","webpack://my-webpack-project/./src/utils.ts","webpack://my-webpack-project/./src/index.ts","webpack://my-webpack-project/./src/listener.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","export interface ICarData {[key: string]: string}\r\nexport interface IAnimationData {[key: string]: {[key: string]: number}}\r\nexport interface IWinData {[key: string]: number}\r\n\r\nexport const state = {\r\n  garagePage: 1,\r\n  carsCount: 0,\r\n  animation: {} as IAnimationData,\r\n  winnerPage: 1,\r\n  winnersCount: 0,\r\n  winId: '',\r\n  sort: '',\r\n  order: '',\r\n};\r\n","import { drawCars, drawWinners, updateStateGarage, updateStateWinners } from './draw';\r\nimport { state, ICarData, IWinData } from './store';\r\n\r\nconst BASE_URL = 'http://127.0.0.1:3000';\r\nconst garage = `${BASE_URL}/garage`;\r\nconst winners = `${BASE_URL}/winners`;\r\nconst engine = `${BASE_URL}/engine`;\r\nconst LIMIT_CARS = 7;\r\nconst LIMIT_WINNERS = 10;\r\n\r\nconst getSortOrder = (sort: string, order: string) => {\r\n  if (sort && order) return `&_sort=${sort}&_order=${order}`;\r\n  return '';\r\n};\r\n\r\nexport const getCar = async (id: string) => (await fetch (`${garage}/${id}`)).json();\r\n\r\nexport const getCars = async (page = state.garagePage, limit = LIMIT_CARS) => {\r\n  const response = await fetch(`${garage}?_page=${page}&_limit=${limit}`);\r\n  const data = await response.json();\r\n  const count = response.headers.get('X-Total-Count') as string;\r\n  (document.querySelector('.cars') as HTMLElement).innerHTML = '';\r\n  state.carsCount = +count;\r\n  updateStateGarage();\r\n  drawCars(data);\r\n};\r\n\r\nexport const createCar = async (body: ICarData) => (await fetch (garage, {\r\n  method: 'POST',\r\n  body: JSON.stringify(body),\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  },\r\n})).json();\r\n\r\nexport const updateCar = async (id: string, body: ICarData) => (await fetch (`${garage}/${id}`, {\r\n  method: 'PUT',\r\n  body: JSON.stringify(body),\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  },\r\n})).json();\r\n\r\nexport const deleteCar = async (id: string) => (await fetch(`${garage}/${id}`, { method: 'DELETE' })).json();\r\n\r\nexport const startEngine = async (id: string) => (await fetch(`${engine}?id=${id}&status=started`, { method: 'PATCH' })).json();\r\n\r\nexport const stopEngine = async (id: string) => (await fetch (`${engine}?id=${id}&status=stopped`, { method: 'PATCH' })).json();\r\n\r\nexport const drive = async (id: string) => {\r\n  const res = await fetch(`${engine}?id=${id}&status=drive`, { method: 'PATCH' }).catch();\r\n  if (res.status === 200 && state.winId === '') {\r\n    state.winId = id;\r\n  }\r\n  return res.status !== 200 ? { success: false } : { ...(await res.json()) };\r\n};\r\n\r\nexport const getWinners = async (page = state.winnerPage, limit = LIMIT_WINNERS, sort = state.sort, order = state.order) => {\r\n  const response = await fetch(`${winners}?_page=${page}&_limit=${limit}${getSortOrder(sort, order)}`);\r\n  const data = await response.json();\r\n  const count = response.headers.get('X-Total-Count') as string;\r\n  state.winnersCount = +count;\r\n  updateStateWinners();\r\n  drawWinners(data);\r\n}\r\n\r\nexport const getWinner = async (id: string) => (await fetch (`${winners}/${id}`)).json();\r\n\r\nconst createWinner = async (body: IWinData) => (await fetch (winners, { \r\n  method: 'POST',\r\n  body: JSON.stringify(body),\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n})).json();\r\n\r\nexport const deleteWinner = async (id: string) => (await fetch (`${winners}/${id}`, { method: 'DELETE' })).json();\r\n\r\nexport const getWins = async () => {\r\n  const response = await fetch(winners);\r\n  const data = await response.json();\r\n  const arrId = data.map((el: ICarData) => el.id)\r\n  return arrId;\r\n}\r\n\r\nconst updateWinner = async (id: string, body: IWinData) => (await fetch (`${winners}/${id}`, {\r\n  method: 'PUT',\r\n  body: JSON.stringify(body),\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  },\r\n})).json();\r\n\r\nexport const updateWinnerList = async (id: string, time: number) => {\r\n  const body: IWinData = {};\r\n  const carsId = await getWins();\r\n  if (carsId.includes(+id)) {\r\n    const winData = await getWinner(id);\r\n    body.wins = ++winData.wins;\r\n    body.time = time < winData.time ? time : winData.time;\r\n\r\n    await updateWinner(id, body);\r\n  } else {\r\n    body.id = +id;\r\n    body.wins = 1;\r\n    body.time = time;\r\n\r\n    await createWinner(body);\r\n  }\r\n\r\n  await getWinners();\r\n}\r\n","export default __webpack_public_path__ + \"img/car.svg\";","export default __webpack_public_path__ + \"img/finish.svg\";","import { getCar } from './api';\r\nimport { state, ICarData } from './store';\r\nimport carImg from '../img/car.svg';\r\nimport flagImg from '../img/finish.svg';\r\n\r\nconst body = document.querySelector('body') as HTMLElement;\r\nconst LIMIT_CARS = 7;\r\nconst LIMIT_WINNERS = 10;\r\n\r\nexport const createPage = () => {\r\n  body.innerHTML =\r\n  `<section>\r\n    <div class=\"tabs\">\r\n      <div class=\"tabs__nav tabs-nav\">\r\n        <div class=\"tabs-nav__item is-active\" data-tab=\"tab-first\">TO GARAGE</div>\r\n        <div class=\"tabs-nav__item\" data-tab=\"tab-second\">TO WINNERS</div>\r\n      </div>\r\n      <div class=\"tabs__content\">\r\n        <div class=\"tab is-active tab-first\">\r\n          <div class=\"menu\">\r\n            <div class=\"menu__create\">\r\n              <input class=\"create-input-text\" type=\"text\" autocomplete=\"off\" placeholder=\"Auto\">\r\n              <input class=\"create-input-color\" type=\"color\">\r\n              <button class=\"btn create-btn btn-reset\">CREATE</button>\r\n            </div>\r\n            <div class=\"menu__change\">\r\n              <input class=\"update-input-text\" type=\"text\" autocomplete=\"off\" disabled>\r\n              <input class=\"update-input-color\" type=\"color\" disabled>\r\n              <button class=\"btn update-btn btn-reset\" disabled data-carId=\"\">UPDATE</button>\r\n            </div>\r\n            <div class=\"menu__btns\">\r\n              <button class=\"btn race-btn btn-reset\">RACE</button>\r\n              <button class=\"btn reset-btn btn-reset\">RESET</button>\r\n              <button class=\"btn generate-btn btn-reset\">GENERATE CARS</button>\r\n            </div>\r\n          </div>\r\n          <div class=\"garage-info\">\r\n            <h1 class=\"garage-info__title\">Garage (<span class=\"garage-length\">${state.carsCount}</span>)</h1>\r\n            <h2 class=\"garage-info__subtitle\">Page #<span class=\"page-num\">${state.garagePage}</span></h2>\r\n          </div>\r\n          <div class=\"cars\"></div>\r\n          <div class=\"garage-nav\">\r\n            <button class=\"arrow-pagin left-item\" disabled>PREW</button>\r\n            <button class=\"arrow-pagin right-item\">NEXT</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"tab tab-second\">\r\n          <div class=\"winners-info\">\r\n            <h1 class=\"winners-info__title\">Winners (<span class=\"winners-length\">1</span>)</h1>\r\n            <h2 class=\"winners-info__subtitle\">Page #<span class=\"winners-page\">1</span></h2>\r\n          </div>\r\n          <table class=\"winners-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Number</th>\r\n                <th>Car</th>\r\n                <th>Name</th>\r\n                <th><button class=\"sort-by-win btn-reset\">Wins</button></th>\r\n                <th><button class=\"sort-by-time btn-reset\">Best time(s)</button></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody class=\"winners-table__body\">\r\n            </tbody>\r\n          </table>\r\n          <div class=\"winners-nav\">\r\n            <button class=\"arrow-pagin win-left\" disabled>PREW</button>\r\n            <button class=\"arrow-pagin win-right\">NEXT</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  <span class=\"message\"></span>`\r\n}\r\n\r\nexport const changeTab = () => {\r\n\tconst tabNav = document.querySelectorAll('.tabs-nav__item'),\r\n\t\t\t\ttabContent = document.querySelectorAll('.tab');\r\n\tlet tabName;\r\n\r\n\ttabNav.forEach(item => {\r\n\t\titem.addEventListener('click', selectTabNav)\r\n\t});\r\n\r\n\tfunction selectTabNav(e: Event) {\r\n\t\ttabNav.forEach(item => {\r\n\t\t\titem.classList.remove('is-active');\r\n\t\t});\r\n\t\r\n\t\t(e.target as HTMLElement).classList.add('is-active');\r\n\t\ttabName = (e.target as HTMLElement).getAttribute('data-tab');\r\n\t\tselectTabContent(tabName as string);\r\n\t}\r\n\r\n\tfunction selectTabContent(str: string) {\r\n\t\ttabContent.forEach(item => {\r\n\t\t\titem.classList.contains(str) ? item.classList.add('is-active') : item.classList.remove('is-active');\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const drawCars = (data: ICarData[]) => {\r\n  const cars = document.querySelector('.cars') as HTMLDivElement;\r\n  data.forEach((data: ICarData) => {\r\n    const newCar = document.createElement('div');\r\n    newCar.classList.add('car-item');\r\n    newCar.innerHTML = `\r\n    <div class=\"car-item__header\">\r\n      <button class=\"car-btn btn-select btn-reset\" type=\"button\" data-carId=\"${data.id}\">SELECT</button>\r\n      <button class=\"car-btn btn-remove btn-reset\" type=\"button\" data-carId=\"${data.id}\">REMOVE</button>\r\n      <span class=\"car-name\">${data.name}</span>\r\n    </div>\r\n    <div class=\"car-item__body\">\r\n      <div class=\"car-item-btns\">\r\n        <button class=\"car-btn btn-start btn-reset\" type=\"button\" data-carId=\"${data.id}\">A</button>\r\n        <button class=\"car-btn btn-stop btn-reset\" type=\"button\" disabled data-carId=\"${data.id}\">B</button>\r\n      </div>\r\n      <svg class=\"car-item__img\" style=\"color: ${data.color};\" data-carId=\"${data.id}\">\r\n        <use xlink:href=\"${carImg}#car\"></use>\r\n      </svg>\r\n      <img class=\"car-item__finish\" src=\"${flagImg}\" alt=\"...\" data-carId=\"${data.id}\">\r\n    </div>`;\r\n\r\n    cars.appendChild(newCar);\r\n})};\r\n\r\nexport const drawWinners = async (data: ICarData[]) => {\r\n  const winners = document.querySelector('.winners-table__body') as HTMLDivElement;\r\n  winners.innerHTML = '';\r\n  let count = 0\r\n  for (const el of data) {\r\n    const carData = await getCar(el.id);\r\n    const newWin = document.createElement('tr');\r\n    newWin.innerHTML = `\r\n    <td>${(state.winnerPage - 1) * LIMIT_WINNERS + ++count}</td>\r\n    <td>\r\n      <svg class=\"car-win__img\" style=\"color: ${carData.color};\" data-carId=\"${el.id}\">\r\n        <use xlink:href=\"${carImg}#car\"></use>\r\n      </svg>\r\n    </td>\r\n    <td>${carData.name}</td>\r\n    <td>${el.wins}</td>\r\n    <td>${el.time}</td>`;\r\n    winners.appendChild(newWin);\r\n  }\r\n};\r\n\r\nexport const updateStateGarage = () => {\r\n  if (state.garagePage * LIMIT_CARS >= state.carsCount) {\r\n    (document.querySelector('.right-item') as HTMLButtonElement).disabled = true;\r\n  } else {\r\n    (document.querySelector('.right-item') as HTMLButtonElement).disabled = false;\r\n  }\r\n\r\n  if (state.garagePage > 1) {\r\n    (document.querySelector('.left-item') as HTMLButtonElement).disabled = false;\r\n  } else {\r\n    (document.querySelector('.left-item') as HTMLButtonElement).disabled = true;\r\n  }\r\n\r\n  (document.querySelector('.garage-length') as HTMLElement).innerText = `${state.carsCount}`;\r\n  (document.querySelector('.page-num') as HTMLElement).innerText = `${state.garagePage}`;\r\n}\r\n\r\nexport const updateStateWinners = () => {\r\n  if (state.winnerPage * LIMIT_WINNERS >= state.winnersCount) {\r\n    (document.querySelector('.win-right') as HTMLButtonElement).disabled = true;\r\n  } else {\r\n    (document.querySelector('.win-right') as HTMLButtonElement).disabled = false;\r\n  }\r\n\r\n  if (state.winnerPage > 1) {\r\n    (document.querySelector('.win-left') as HTMLButtonElement).disabled = false;\r\n  } else {\r\n    (document.querySelector('.win-left') as HTMLButtonElement).disabled = true;\r\n  }\r\n\r\n  (document.querySelector('.winners-length') as HTMLElement).innerText = `${state.winnersCount}`;\r\n  (document.querySelector('.winners-page') as HTMLElement).innerText = `${state.winnerPage}`;\r\n}\r\n","import { drive, startEngine, stopEngine } from './api';\r\nimport { state } from './store';\r\n\r\nconst models = ['Acura', 'Alfa Romeo', 'Alpine', 'Apollo', 'Apple', 'Aston Martin', 'Audi', 'Automobili Pininfarina', 'Bentley', 'BMW', 'Bollinger', 'Brilliance', 'Bugatti', 'Buick', 'BYD', 'Cadillac', 'Chana', 'Chery', 'Chevrolet', 'Chrysler', 'Citroen', 'Continental', 'CUPRA', 'Dacia', 'Daewoo', 'Daihatsu', 'Datsun', 'Detroit Electric', 'Dodge', 'DS Automobiles', 'FAW', 'Ferrari', 'Fiat', 'Fisker', 'Ford', 'Foxtron', 'Geely', 'Genesis', 'GMC', 'Great Wall', 'Haval', 'Honda', 'Hummer', 'Hyundai', 'Ineos', 'Infiniti', 'Iran Khodro', 'JAC', 'Jaguar', 'Jeep', 'JETOUR', 'KIA', 'Koenigsegg', 'Lamborghini', 'Lancia', 'Land Rover', 'Lexus', 'Lifan', 'Lincoln', 'Lordstown', 'Lotus', 'Lucid', 'LvChi', 'Lynk & Co', 'Maserati', 'Maybach', 'Mazda', 'MCLaren', 'Mercedes-Benz', 'MG', 'MINI', 'Mitsubishi', 'Nikola', 'NIO', 'Nissan', 'Opel', 'Pagani', 'Peugeot', 'Polestar', 'Porsche', 'Qoros', 'Range Rover', 'Ravon', 'Renault', 'Rimac', 'Rivian', 'Rolls-Royce', 'Saab', 'Saipa', 'SEAT', 'Skoda', 'Smart', 'SsangYong', 'SSC North America', 'Stellantis', 'Subaru', 'Suzuki', 'Tata', 'Tesla', 'Torsus', 'Toyota', 'VinFast', 'Volkswagen', 'Volvo', 'Xpeng', 'Zotye',];\r\n\r\nconst names = ['Durango', 'Ram', 'Challenger', 'Charger', 'Grand Caravan', 'X7', 'X5', 'X3', 'X6 M', 'X6', 'X1', 'X4', 'C3 Aircross', 'C5 Aircross', 'Duster', 'CR-V', 'Corolla', 'C4 Cactus', 'DS3 Crossback', 'C1', 'C3', 'Berlingo Multispace', 'DS4 Crossback', 'UX 250h', 'NX 300h', 'LC 500', 'RX 350/200t', 'Rapid', 'Largus', 'IS 200t', 'LS 500h', 'RX', 'ES 200/250/350', 'Hatchback', 'CX-5', 'Sedan', 'CX-30', 'CX-9', 'CX-3', 'MX-5 Roadster', 'Phantom', 'Camry', 'Polo', 'Cullinan', 'Ghost', 'Dawn', 'Duster', 'Arkana', 'Sandero', 'Logan', 'Trafic Fourgon', 'Logan MCV', 'Captur', 'Kadjar', 'RAV4', 'Rio', 'Creta', 'Solaris',];\r\n\r\nconst GENERATE_CARS = 100;\r\n\r\nconst getRandomName = () => {\r\n  const model = models[Math.floor(Math.random() * models.length)];\r\n  const name = names[Math.floor(Math.random() * names.length)]; \r\n  return `${model} ${name}`;\r\n};\r\n\r\nconst getRandomColor = () => {\r\n  const letters = '0123456789abcdef';\r\n  let color = '#'; \r\n  for (let i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n}\r\n\r\nexport const generateRandomCars = (count = GENERATE_CARS) => new Array(count).fill(1).map(_ => ({ name: getRandomName(), color: getRandomColor() }));\r\n\r\nexport function animation(car: HTMLElement, distance: number, animationTime: number) {\r\n  let start = 0;\r\n  const state: {'id'?: number} = {};\r\n\r\n  function step(timestamp: number) {\r\n    if (!start) start = timestamp;\r\n    const time = timestamp - start;\r\n    const passed = Math.round(time * (distance / animationTime));\r\n    car.style.transform = `translateX(${Math.min(passed, distance)}px)`;\r\n\r\n    if (passed < distance) {\r\n      state.id = window.requestAnimationFrame(step) as number;\r\n    }\r\n  }\r\n  state.id = window.requestAnimationFrame(step);\r\n  \r\n  return state;\r\n}\r\n\r\nexport const startDriving = async (id: string) => {\r\n  (document.querySelector(`.btn-start[data-carid=\"${id}\"]`) as HTMLButtonElement).disabled = true;\r\n  const { velocity, distance } = await startEngine(id);\r\n  const time = Math.round(distance / velocity);\r\n  (document.querySelector(`.btn-stop[data-carid=\"${id}\"]`) as HTMLButtonElement).disabled = false;\r\n  const car = document.querySelector(`.car-item__img[data-carid=\"${id}\"]`) as HTMLElement\r\n  const flag = document.querySelector(`.car-item__finish[data-carid=\"${id}\"]`) as HTMLElement\r\n  const dist = flag.offsetLeft - 25;\r\n  state.animation[id] = animation(car, dist, time) as { 'id': number };\r\n  const { success } = await drive(id);\r\n  if (!success) window.cancelAnimationFrame(state.animation[id].id);\r\n  return { time };\r\n};\r\n\r\nexport const stopDriving = async (id: string) => {\r\n  (document.querySelector(`.btn-stop[data-carid=\"${id}\"]`) as HTMLButtonElement).disabled = true;\r\n  await stopEngine(id);\r\n  (document.querySelector(`.btn-start[data-carid=\"${id}\"]`) as HTMLButtonElement).disabled = false;\r\n  const car = document.querySelector(`.car-item__img[data-carid=\"${id}\"]`) as HTMLElement;\r\n  car.style.transform = 'translateX(0)';\r\n  if (state.animation[id]) window.cancelAnimationFrame(state.animation[id].id);\r\n  (document.querySelector(`.btn-start[data-carid=\"${id}\"]`) as HTMLButtonElement).disabled = false;\r\n};\r\n  ","import { createPage, changeTab } from './draw';\nimport { getCars, getWinners } from './api';\nimport { listen } from './listener';\nimport './css/normalize.css';\nimport './css/style.css';\n\ncreatePage();\nchangeTab();\ngetCars();\ngetWinners();\nlisten();\n","import { getCar, getCars, createCar, updateCar, deleteCar, getWins, getWinners, updateWinnerList, deleteWinner, drive, startEngine, stopEngine } from './api';\r\nimport { generateRandomCars, animation, startDriving, stopDriving } from './utils';\r\nimport { state } from './store';\r\n\r\nconst LIMIT_CARS = 7;\r\nconst LIMIT_WINNERS = 10;\r\nconst distCorrectionValue = 25;\r\n\r\nexport const listen = () => {\r\n  document.body.addEventListener('click', async (e: Event) => {\r\n    const target = e.target as HTMLButtonElement;\r\n    const id = target.dataset.carid as string;\r\n    if (!target.classList.contains('message')) {\r\n      (document.querySelector('.message') as HTMLElement).classList.remove('active');\r\n    }\r\n\r\n    if (target.classList.contains('generate-btn')) {\r\n      target.disabled = true;\r\n      const cars = generateRandomCars();\r\n      await Promise.all(cars.map(async c => await createCar(c)));\r\n      await getCars();\r\n      target.disabled = false;\r\n    }\r\n\r\n    if (target.classList.contains('create-btn')) {\r\n      const name = (document.querySelector('.create-input-text') as HTMLInputElement).value;\r\n      const color = (document.querySelector('.create-input-color') as HTMLInputElement).value;\r\n      const body = { name, color };\r\n      (document.querySelector('.create-input-text') as HTMLInputElement).value = '';\r\n      (document.querySelector('.create-input-color') as HTMLInputElement).value = '#000000';\r\n      await createCar(body);\r\n      await getCars();\r\n    }\r\n\r\n    if (target.classList.contains('update-btn')) {\r\n      const updateText = document.querySelector('.update-input-text') as HTMLInputElement;\r\n      const updateColor = document.querySelector('.update-input-color') as HTMLInputElement;\r\n      const name = updateText.value;\r\n      const color = updateColor.value;\r\n      const body = { name, color };\r\n      updateText.value = '';\r\n      updateColor.value = '#000000';\r\n      updateText.disabled = true;\r\n      updateColor.disabled = true;\r\n      target.disabled = true;\r\n      await updateCar(id, body);\r\n      await getCars();\r\n    }\r\n\r\n    if (target.classList.contains('btn-select')) {\r\n      const carData = await getCar(id);\r\n      const updateText = document.querySelector('.update-input-text') as HTMLInputElement;\r\n      const updateColor = document.querySelector('.update-input-color') as HTMLInputElement;\r\n      const updateBtn = document.querySelector('.update-btn') as HTMLButtonElement;\r\n      updateText.disabled = false;\r\n      updateText.value = carData.name;\r\n      updateColor.disabled = false;\r\n      updateColor.value = carData.color;\r\n      updateBtn.disabled = false;\r\n      updateBtn.dataset.carid = id;\r\n    }\r\n\r\n    if (target.classList.contains('btn-remove')) {\r\n      --state.carsCount;\r\n      if ((state.garagePage - 1) * LIMIT_CARS === state.carsCount && state.garagePage > 1) {\r\n        --state.garagePage;\r\n      }\r\n      await deleteCar(id);\r\n      await getCars();\r\n      const arrId = await getWins();\r\n      if (arrId.includes(+id)) {\r\n        --state.winnersCount;\r\n        if ((state.winnerPage - 1) * LIMIT_WINNERS === state.winnersCount && state.winnerPage > 1) {\r\n          --state.winnerPage;\r\n        }\r\n        await deleteWinner(id);\r\n        await getWinners();\r\n      }\r\n    }\r\n\r\n    if (target.classList.contains('btn-start')) {\r\n      target.disabled = true;\r\n      const { velocity, distance } = await startEngine(id);\r\n      const time = Math.round(distance / velocity);\r\n      (document.querySelector(`.btn-stop[data-carid=\"${id}\"]`) as HTMLButtonElement).disabled = false;\r\n      const car = document.querySelector(`.car-item__img[data-carid=\"${id}\"]`) as HTMLElement\r\n      const flag = document.querySelector(`.car-item__finish[data-carid=\"${id}\"]`) as HTMLElement\r\n      const dist = flag.offsetLeft - distCorrectionValue;\r\n      state.animation[id] = animation(car, dist, time) as { 'id': number };\r\n\r\n      const { success } = await drive(id);\r\n      if (!success) window.cancelAnimationFrame(state.animation[id].id);\r\n    }\r\n\r\n    if (target.classList.contains('btn-stop')) {\r\n      target.disabled = true;\r\n      await stopEngine(id);\r\n      const car = document.querySelector(`.car-item__img[data-carid=\"${id}\"]`) as HTMLElement;\r\n      car.style.transform = 'translateX(0)';\r\n      if (state.animation[id]) window.cancelAnimationFrame(state.animation[id].id);\r\n      (document.querySelector(`.btn-start[data-carid=\"${id}\"]`) as HTMLButtonElement).disabled = false;\r\n    }\r\n\r\n    if (target.classList.contains('race-btn')) {\r\n      target.disabled = true;\r\n      let counter = 0;\r\n      state.winId = '';\r\n      Array.from(document.querySelectorAll('.car-item__img')).forEach(async (el) => {\r\n        const id = (el as HTMLElement).dataset.carid as string;\r\n        const { time } = await startDriving(id);\r\n        if (state.winId !== '' && counter === 0) {\r\n          counter++;\r\n          const carData = await getCar(id);\r\n          const actualTime = (time / 1000).toFixed(2);\r\n          const message = document.querySelector('.message') as HTMLElement;\r\n          message.innerText = '';\r\n          message.innerText = `${carData.name} went first (${actualTime}s)`;\r\n          message.classList.add('active');\r\n          await updateWinnerList(id, +actualTime);\r\n        }\r\n      });\r\n      (document.querySelector('.reset-btn') as HTMLButtonElement).disabled = false;\r\n    }\r\n\r\n    if (target.classList.contains('reset-btn')) {\r\n      target.disabled = true;\r\n      const cars = Array.from(document.querySelectorAll('.car-item__img'));\r\n      for (const el of cars) {\r\n        const id = (el as HTMLElement).dataset.carid as string;\r\n        await stopDriving(id);\r\n      }\r\n      (document.querySelector('.race-btn') as HTMLButtonElement).disabled = false;\r\n    }\r\n\r\n    if (target.classList.contains('sort-by-win')) {\r\n      if(state.sort === 'time') {\r\n        state.order = '';\r\n        (document.querySelector('.sort-by-time') as HTMLElement).innerText = 'Best time(s)';\r\n      }\r\n      state.sort = 'wins';\r\n      if (state.order === '' || state.order === 'DESC') {\r\n        state.order = 'ASC';\r\n        target.innerText = 'Wins ↑';\r\n      } else {\r\n        state.order = 'DESC';\r\n        target.innerText = 'Wins ↓';\r\n      }\r\n      await getWinners();\r\n    }\r\n\r\n    if (target.classList.contains('sort-by-time')) {\r\n      if(state.sort === 'wins') {\r\n        state.order = '';\r\n        (document.querySelector('.sort-by-win') as HTMLElement).innerText = 'Wins';\r\n      }\r\n      state.sort = 'time';\r\n      if (state.order === '' || state.order === 'DESC') {\r\n        state.order = 'ASC';\r\n        target.innerText = 'Best time(s) ↑';\r\n      } else {\r\n        state.order = 'DESC';\r\n        target.innerText = 'Best time(s) ↓';\r\n      }\r\n      await getWinners();\r\n    }\r\n    \r\n    if (target.classList.contains('right-item')) {\r\n      ++state.garagePage;\r\n\t    await getCars();\r\n    }\r\n\r\n    if (target.classList.contains('left-item')) {\r\n      --state.garagePage;\r\n\t    await getCars();\r\n    }\r\n\r\n    if (target.classList.contains('win-right')) {\r\n      ++state.winnerPage;\r\n\t    await getWinners();\r\n    }\r\n\r\n    if (target.classList.contains('win-left')) {\r\n      --state.winnerPage;\r\n\t    await getWinners();\r\n    }\r\n  })\r\n}\r\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","state","garagePage","carsCount","animation","winnerPage","winnersCount","winId","sort","order","BASE_URL","garage","winners","engine","getSortOrder","getCar","id","fetch","json","getCars","page","limit","response","data","count","headers","get","querySelector","innerHTML","updateStateGarage","drawCars","createCar","body","method","JSON","stringify","updateCar","deleteCar","startEngine","stopEngine","drive","catch","res","status","success","getWinners","updateStateWinners","drawWinners","getWinner","createWinner","deleteWinner","getWins","map","el","updateWinner","updateWinnerList","time","includes","winData","wins","cars","forEach","newCar","createElement","classList","add","name","color","car","appendChild","carData","newWin","disabled","innerText","models","names","getRandomColor","i","Math","floor","random","distance","animationTime","start","requestAnimationFrame","step","timestamp","passed","round","style","transform","min","startDriving","velocity","flag","dist","offsetLeft","cancelAnimationFrame","stopDriving","tabName","tabNav","querySelectorAll","tabContent","selectTabNav","str","item","remove","target","getAttribute","contains","addEventListener","changeTab","dataset","carid","Array","fill","_","Promise","all","c","value","updateText","updateColor","updateBtn","from","actualTime","toFixed","message"],"sourceRoot":""}